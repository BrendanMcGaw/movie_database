{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\movie_database\\\\movie_database\\\\frontend\\\\src\\\\Components\\\\MovieForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { postMovies } from \"../Requests/MoviePost.tsx\";\nimport { updateMovieFetch } from \"../Requests/UpdateMovie.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieForm = ({\n  updateMode,\n  movieId,\n  showAddMovie\n}) => {\n  _s();\n  const [movieDetails, setMovieDetails] = useState({\n    title: \"\",\n    description: \"\",\n    runtime: 0\n  });\n  const handleClick = () => {\n    if (showAddMovie === true && updateMode === false) {\n      postMovies(movieDetails);\n      console.log(\"showAddMovie state is: \", showAddMovie, \"updateMode state is: \", updateMode);\n    } else if (updateMode === true) {\n      updateMovieFetch(movieDetails, movieId);\n      console.log(\"showAddMovie state is: \", showAddMovie, \"updateMode state is: \", updateMode);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"formContainer\",\n    onSubmit: event => {\n      console.log(\"The details for the movie to either update or add are: \", movieDetails);\n      handleClick();\n      // event.preventDefault();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"inputContainer\",\n      children: [\"Title:\", \"\", /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        name: \"title\",\n        value: movieDetails.title,\n        onChange: event => setMovieDetails(old => ({\n          ...movieDetails,\n          title: event.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"inputContainer\",\n      children: [\"Description:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        name: \"description\",\n        value: movieDetails.description,\n        onChange: event => setMovieDetails(old => ({\n          ...movieDetails,\n          description: event.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"inputContainer\",\n      children: [\"Runtime:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        value: movieDetails.runtime,\n        onChange: event => setMovieDetails(old => ({\n          ...movieDetails,\n          // spread operator allows us to put our new inputs to the front of the target.value column, giving us our new movieDetails runtime\n          runtime: parseInt(event.target.value)\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"formButton\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieForm, \"emX4wTRbRNiosLLcVQCNf5+Jjvc=\");\n_c = MovieForm;\nvar _c;\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"names":["React","useState","postMovies","updateMovieFetch","jsxDEV","_jsxDEV","MovieForm","updateMode","movieId","showAddMovie","_s","movieDetails","setMovieDetails","title","description","runtime","handleClick","console","log","className","onSubmit","event","children","required","type","name","value","onChange","old","target","fileName","_jsxFileName","lineNumber","columnNumber","parseInt","_c","$RefreshReg$"],"sources":["D:/Repositories/movie_database/movie_database/frontend/src/Components/MovieForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Movie, postMovies } from \"../Requests/MoviePost.tsx\";\r\nimport { updateMovieFetch } from \"../Requests/UpdateMovie.tsx\";\r\n\r\ntype MovieFormProps = {\r\n    updateMode: boolean;\r\n    movieId: number;\r\n    showAddMovie: boolean;\r\n};\r\n\r\nexport const MovieForm = ({\r\n    updateMode,\r\n    movieId,\r\n    showAddMovie,\r\n}: MovieFormProps) => {\r\n    const [movieDetails, setMovieDetails] = useState<Movie>({\r\n        title: \"\",\r\n        description: \"\",\r\n        runtime: 0,\r\n    });\r\n\r\n    const handleClick = () => {\r\n        if (showAddMovie === true && updateMode === false) {\r\n            postMovies(movieDetails);\r\n            console.log(\r\n                \"showAddMovie state is: \",\r\n                showAddMovie,\r\n                \"updateMode state is: \",\r\n                updateMode\r\n            );\r\n        } else if (updateMode === true) {\r\n            updateMovieFetch(movieDetails, movieId);\r\n            console.log(\r\n                \"showAddMovie state is: \",\r\n                showAddMovie,\r\n                \"updateMode state is: \",\r\n                updateMode\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form\r\n            className=\"formContainer\"\r\n            onSubmit={(event) => {\r\n                console.log(\r\n                    \"The details for the movie to either update or add are: \",\r\n                    movieDetails\r\n                );\r\n                handleClick();\r\n                // event.preventDefault();\r\n            }}\r\n        >\r\n            <label className=\"inputContainer\">\r\n                Title:{\"\"}\r\n                <input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={movieDetails.title}\r\n                    onChange={(event) =>\r\n                        setMovieDetails((old) => ({\r\n                            ...movieDetails,\r\n                            title: event.target.value,\r\n                        }))\r\n                    }\r\n                />\r\n            </label>\r\n            <label className=\"inputContainer\">\r\n                Description:{\" \"}\r\n                <input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    value={movieDetails.description}\r\n                    onChange={(event) =>\r\n                        setMovieDetails((old) => ({\r\n                            ...movieDetails,\r\n                            description: event.target.value,\r\n                        }))\r\n                    }\r\n                />\r\n            </label>\r\n            <label className=\"inputContainer\">\r\n                Runtime:{\" \"}\r\n                <input\r\n                    required\r\n                    type=\"text\"\r\n                    value={movieDetails.runtime}\r\n                    onChange={(event) =>\r\n                        setMovieDetails((old) => ({\r\n                            ...movieDetails, // spread operator allows us to put our new inputs to the front of the target.value column, giving us our new movieDetails runtime\r\n                            runtime: parseInt(event.target.value),\r\n                        }))\r\n                    }\r\n                />\r\n            </label>\r\n            <button className=\"formButton\" type=\"submit\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}